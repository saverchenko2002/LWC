<apex:page showHeader="false" applyBodyTag="false" applyHtmlTag="false" sidebar="false" standardStylesheets="false"  renderAs="pdf">
    <head>
        <style>
            body { 
                font-family: sans-serif;
                font-size: 24px;
                /* background: url('{!$Resource.a4_perfection}');
                background-repeat: no-repeat; */
                /*background-origin: border-box;*/ 
                
             
            }

            /* @page {
                size: letter;
                margin: 25mm;
                @top-center {
                    content: "Sample";
                }
                @bottom-center {
                    content: "Page " counter(page) " of " counter(pages);
                }
            }
            .page-break {
                display:block;
                page-break-after:always; 
            }*/

            @page {  size: 1700px 2800px; margin: 0; padding: 0;}

            p .text-output{
                font-family: Arial, Helvetica, sans-serif;
                font-size: 40px;
            }
            
            /*17.5in 29in*/
            /* img {
                min-height: 100%;
                min-width: 100%;
                width: auto;
                height: auto;
                max-width: none;
                max-height: none;
                display: block;
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
            .container {
                width: 1700px;
                height: 2700px;
            } */
            /* body {
                font-family: Arial Unicode MS;
                background-image: url('{!$Resource.page1_421a}');
            background-repeat: no-repeat;
            /* background-position: 100% 50%; 
            max-width:100%; height:auto;
            } */

            /* body {
            background-image: url('{!$Resource.page1_421a}');
            background-repeat: no-repeat;
            /* background-position: 100% 50%; 
            max-width:100%; height:auto;

            background-size: cover;
            zoom: 0;
            margin: 0px;
           
            }

            @page {
                width: 1700px;
            }

            .fill {
                overflow: hidden;
                background-size: cover;
                background-position: center;
              
            }

            .image{
                height: 28000px;
                background-position:center;
                background-size: cover;
                -o-background-size: cover;
                display: flex;
                justify-content: center;
                width: inherit;
                overflow: hidden;
            }

            @page {
                size: portrait;
            } */
            /* img {
                width: 1700px;
                height: 28000px;
                object-fit: fill;
            } */
            /* .background {
               width: 1700px;
               height: 2800px;
                background-image:url('{!$Resource.page1_421a}');
                background-size: cover;
                background-position: center center;
                background-repeat: no-repeat;
                text-align:center;
                margin:auto;
                padding:0;
            } */
            /* @page {
                
                size: A2;
            margin-left: 1cm;
            margin-right: 1cm;
            margin-top: 4.5cm;
            margin-bottom: 1.8cm;
            } */
      
        </style>
    </head>
    <body>
        <!-- <h1 hidden="true" style="position:absolute; top: 28000px">text</h1> -->
        
       <!-- <div style="background-image: url('{!$Resource.page1_421a}')" class="fill">
           <h1 style="position: absolute; top: 3000px;">Hello epta</h1>
       </div> -->
         
        <img src="{!$Resource.template_421AppDoc}" style="top: 0; position: absolute"/>
        <!-- <apex:image style="img" value="{!$Resource.checkbox_true}"/> -->
        <p class="text-output" style="position:absolute; top: 675px; left: 710px;">
            text info
        </p>
        <!-- <apex:form>
            <apex:inputCheckbox style="position:absolute; top: 754px; left: 916px;"/>

        </apex:form> -->
        <img src="{!$Resource.checkbox_true}" style="position:absolute; top: 754px; left: 916px; background: #000;" width="20px"/>

        <img src="{!$Resource.checkbox_true}" style="position:absolute; top: 754px; left: 1046px; background: #000;" width="20px"/>

        <img src="{!$Resource.checkbox_true}" style="position:absolute; top: 798px; left: 787px; background: #000;" width="20px"/>


    <!-- <p style="position:absolute; top: 2680px; left: 705px;">
        dummy text
    </p> -->
    </body>
</apex:page>
<!-- {!$Resource.template_421AppDoc} -->

<!-- public class WorkbookExcel {
    
    static string url = 'https://vrgt9ue1bj.execute-api.us-east-1.amazonaws.com/production/';
    

	@InvocableMethod(label='Generate PDF from VF Page')
    public static void generate(Paremeters [] parameters ){
    	Paremeters paremeter = parameters[0];
   		generate(paremeter.recordId);
    }
    
    @future(callout=true)
    public static void generate(Id recordId){
       
        HttpRequest request = new HttpRequest();
        request.setEndpoint(url);
        request.setMethod('POST');
        
        Blob responseBLOB;
        
        Http http = new Http();
        HttpResponse response = http.send(request);
        responseBLOB = response.getBodyAsBlob();
        
        
        ContentVersion conVer = new ContentVersion();
        conVer.ContentLocation = 'S'; // S specify this document is in SF, use E for external files
        conVer.PathOnClient = 'workbook.xlsm';
        conVer.Title = 'Workbook.xlsm';
        conVer.VersionData = responseBLOB;
        insert conVer;
        
        // First get the content document Id from ContentVersion
        Id conDoc = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:conVer.Id].ContentDocumentId;
        
        
        ContentDocumentLink cDe = new ContentDocumentLink();
        cDe.ContentDocumentId = conDoc;
        cDe.LinkedEntityId = recordId; // you can use objectId,GroupId etc
        cDe.ShareType = 'I'; // Inferred permission, checkout description of ContentDocumentLink object for more details
        cDe.Visibility = 'AllUsers';
        
        insert cDe;
    }
    
     public class Paremeters {
         
        @InvocableVariable(label='Record ID' required=true)
        public String recordId;
     }
} -->


